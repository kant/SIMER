% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phenotype.r
\name{phenotype}
\alias{phenotype}
\title{Generate phenotype and other values according to selection criterion}
\usage{
phenotype(effs, pop, pop.geno, pos.map, h2.tr1 = c(0.3, 0.1, 0.05, 0.05,
  0.05, 0.01), gnt.cov = matrix(c(1, 2, 2, 15), 2, 2),
  env.cov = matrix(c(10, 5, 5, 100), 2, 2), sel.crit = "pheno",
  pop.total = NULL, sel.on = TRUE, inner.env = NULL,
  verbose = TRUE)
}
\arguments{
\item{effs}{a list with number of overlap markers, selected markers, effects of markers}

\item{pop}{population information of generation, family index, within-family index, index, sire, dam, sex, phenotpye}

\item{pop.geno}{genotype matrix of population, a individual has two columns}

\item{pos.map}{marker information of population}

\item{h2.tr1}{heritability vector of trait1, corresponding to a, d, aXa, aXd, dXa, dXd}

\item{gnt.cov}{genetic covaiance matrix among all traits}

\item{env.cov}{environment covaiance matrix among all traits}

\item{sel.crit}{selection criteria with options: "TGV", "TBV", "pEBVs", "gEBVs", "ssEBVs", "pheno"}

\item{pop.total}{total population infarmation}

\item{sel.on}{whether to add selection}

\item{inner.env}{environment of main function of simer}

\item{verbose}{whether to print detail}
}
\value{
phenotype of population
}
\description{
Build date: Jul 14, 2019
Last update: Oct 13, 2019
}
\examples{
basepop <- getpop(nind = 100, from = 1, ratio = 0.1)
basepop.geno <- genotype(num.marker = 48353, num.ind = 100, verbose = TRUE)
effs <-
    cal.effs(pop.geno = basepop.geno,
             cal.model = "A",
             num.qtn.tr1 = c(2, 6, 10),
             var.tr1 = c(0.4, 0.2, 0.02, 0.02, 0.02, 0.02, 0.02, 0.001),
             dist.qtn.tr1 = rep("normal", 6),
             eff.unit.tr1 = c(0.5, 0.5, 0.5, 0.5, 0.5, 0.5),
             shape.tr1 = c(1, 1, 1, 1, 1, 1),
             scale.tr1 = c(1, 1, 1, 1, 1, 1),
             multrait = FALSE,
             num.qtn.trn = matrix(c(18, 10, 10, 20), 2, 2),
             eff.sd = diag(c(1, 0.5)),
             qtn.spot = rep(0.1, 10),
             maf = 0, 
             verbose = TRUE)
str(basepop)
pop.pheno <-
    phenotype(effs = effs,
              pop = basepop,
              pop.geno = basepop.geno,
              pos.map = NULL,
              h2.tr1 = c(0.3, 0.1, 0.05, 0.05, 0.05, 0.01),
              gnt.cov = matrix(c(1, 2, 2, 15), 2, 2),
              env.cov = matrix(c(10, 5, 5, 100), 2, 2),
              sel.crit = "pheno", 
              pop.total = basepop, 
              sel.on = TRUE, 
              inner.env = NULL, 
              verbose = TRUE)
str(pop.pheno)

effs <-
    cal.effs(pop.geno = basepop.geno,
             cal.model = "A",
             num.qtn.tr1 = c(2, 6, 10),
             var.tr1 = c(0.4, 0.2, 0.02, 0.02, 0.02, 0.02, 0.02, 0.001),
             dist.qtn.tr1 = rep("normal", 6),
             eff.unit.tr1 = c(0.5, 0.5, 0.5, 0.5, 0.5, 0.5),
             shape.tr1 = c(1, 1, 1, 1, 1, 1),
             scale.tr1 = c(1, 1, 1, 1, 1, 1),
             multrait = TRUE,
             num.qtn.trn = matrix(c(18, 10, 10, 20), 2, 2),
             eff.sd = diag(c(1, 0.5)),
             qtn.spot = rep(0.1, 10),
             maf = 0, 
             verbose = TRUE)
str(basepop)
pop.pheno <-
    phenotype(effs = effs,
              pop = basepop,
              pop.geno = basepop.geno,
              pos.map = NULL,
              h2.tr1 = c(0.3, 0.1, 0.05, 0.05, 0.05, 0.01),
              gnt.cov = matrix(c(1, 2, 2, 15), 2, 2),
              env.cov = matrix(c(10, 5, 5, 100), 2, 2),
              sel.crit = "pheno", 
              pop.total = basepop, 
              sel.on = TRUE, 
              inner.env = NULL, 
              verbose = TRUE)
str(pop.pheno)
}
\author{
Dong Yin
}
